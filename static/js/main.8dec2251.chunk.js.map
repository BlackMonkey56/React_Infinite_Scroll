{"version":3,"sources":["api.js","Screens/MovieList.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","prev","useState","data","setData","loading","setLoading","page","setPage","onScroll","Math","floor","document","documentElement","getBoundingClientRect","bottom","window","innerHeight","useEffect","get","params","limit","getMovies","then","movies","catch","error","console","finally","addEventListener","removeEventListener","map","movie","index","key","id","style","fontWeight","marginBottom","title","App","className","MovieList","ReactDOM","render","StrictMode","getElementById"],"mappings":"yNAEMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,0BCAPC,EAAO,GAEI,aAAO,IAAD,EACKC,mBAAS,MADd,mBACZC,EADY,KACNC,EADM,OAEWF,oBAAS,GAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGKJ,mBAAS,GAHd,mBAGZK,EAHY,KAGNC,EAHM,KAKbC,EAAW,WAEbC,KAAKC,MAAMC,SAASC,gBAAgBC,wBAAwBC,SAC5DC,OAAOC,aAEPT,EAAQD,EAAO,IA6BnB,OAzBAW,qBAAU,WAoBR,ODjCqB,eAACX,EAAD,uDAAQ,EAAR,OACvBV,EAAIsB,IAAI,oBAAqB,CAAEC,OAAQ,CAAEb,OAAMc,MAAO,MCapDC,CAAUf,GACPgB,MACC,YAIO,IAFKC,EAEN,EAHJrB,KACEA,KAAQqB,OAGVpB,EAAQ,GAAD,mBAAKH,GAAL,YAAcuB,KACrBvB,EAAI,sBAAOA,GAAP,YAAgBuB,OAGvBC,OAAM,SAACC,GACNC,QAAQD,MAAMA,MAEfE,SAAQ,WACPtB,GAAW,MAEfU,OAAOa,iBAAiB,SAAUpB,GAE3B,WACLO,OAAOc,oBAAoB,SAAUrB,MAEtC,CAACF,IAGF,oCACE,sDAA4BA,GAC3BF,EACC,2CAEAF,EAAK4B,KAAI,SAACC,EAAOC,GAAR,OACP,yBACEC,IAAKF,EAAMG,GACXC,MAAO,CAAEC,WAAY,OAAQC,aAAc,SAE1CL,EAAQ,EAJX,IAIeD,EAAMO,YC5ChBC,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAACC,EAAD,QCFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASkC,eAAe,W","file":"static/js/main.8dec2251.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://yts.mx/api/v2\",\r\n});\r\n\r\nexport const getMovies = (page = 1) =>\r\n  api.get(\"/list_movies.json\", { params: { page, limit: 50 } });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMovies } from \"../api\";\r\n\r\nlet prev = [];\r\n\r\nexport default () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const onScroll = () => {\r\n    if (\r\n      Math.floor(document.documentElement.getBoundingClientRect().bottom) <=\r\n      window.innerHeight\r\n    ) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies(page)\r\n      .then(\r\n        ({\r\n          data: {\r\n            data: { movies },\r\n          },\r\n        }) => {\r\n          setData([...prev, ...movies]);\r\n          prev = [...prev, ...movies];\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Infinite Movies / Page {page}</h1>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        data.map((movie, index) => (\r\n          <div\r\n            key={movie.id}\r\n            style={{ fontWeight: \"bold\", marginBottom: \"20px\" }}\r\n          >\r\n            {index + 1} {movie.title}\r\n          </div>\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport MovieList from \"../Screens/MovieList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MovieList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}